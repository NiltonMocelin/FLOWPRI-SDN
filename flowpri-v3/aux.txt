#criando a tabela de roteamento - no momento existem apenas 2 switches
        #em breve serao redes separadas
        #switch S1 - dominio C1 --- arrumado -> porta eh agr um inteiro
        
        #como cada controlador tem apenas um switch neste teste, e o switch tem o mesmo id do controlador - criar o switch e as configuracoes assim...
        if datapath.id == 1:

            LISTA_HOSTS['10.10.10.1'] = 1
            LISTA_HOSTS['10.123.123.1'] = 1
            # dizendo qual o primeiro switch da rota para os hosts determinados
            LISTA_HOSTS['172.16.10.1'] = 1
            LISTA_HOSTS['172.16.10.2'] = 1
            LISTA_HOSTS['172.16.10.3'] = 1
            LISTA_HOSTS['172.16.10.4'] = 1
            
            #config. rotas
            #hosts
            switch.addRede('172.16.10.1',1) #rota para destino h1->s1-eth1
            switch.addRede('172.16.10.2',2)
            switch.addRede('172.16.10.3',3)
            switch.addRede('172.16.10.4',4)
            
            #real
            switch.addRede('10.123.123.1',5) #rota para controlador do S1
            switch.addRede('10.123.123.2',4) #rota para controlador do S2
            switch.addRede('10.123.123.3',4) #rota para controlador do S2

            #fic-real (eh o que vale dentro da rede mininet para as interfaces dos controladores)
            switch.addRede('10.10.10.4',4)
            switch.addRede('10.10.10.2',4) #rota para controlador do S2
            switch.addRede('10.10.10.1',5) #rota para controlador do S1
            switch.addRede('10.10.10.3',4) #rota para controlador do S1
            
            #fic-individual controlador
            switch.addRede('20.10.10.2',4) #rota para controlador do S2
            switch.addRede('20.10.10.1',5) #rota para controlador do S1
            switch.addRede('20.10.10.3',4) #rota para controlador do S1
            switch.addRede('20.10.10.4',4)

            # portas ligadas a hosts ou a outros dominios: next = -1; significa que nao podemos pegar switches alem dessa conexao
            switch.getPorta(1).next=-1
            switch.getPorta(2).next=-1
            switch.getPorta(3).next=-1
            #s1:4 <-> s2:1
            switch.getPorta(4).next=-2

            #root1-c1
            switch.getPorta(5).next=-1
		
		
		#switch S2 - dominio C2
        elif datapath.id == 2:

            LISTA_HOSTS['10.10.10.2'] = 2
            LISTA_HOSTS['10.123.123.2'] = 2
            # dizendo qual o primeiro switch da rota para os hosts determinados
            LISTA_HOSTS['172.16.10.1'] = 2
            LISTA_HOSTS['172.16.10.2'] = 2
            LISTA_HOSTS['172.16.10.3'] = 2
            LISTA_HOSTS['172.16.10.4'] = 2
            #
            #conf. rotas
            #hosts
            switch.addRede('172.16.10.4',3)
            switch.addRede('172.16.10.1',2)
            switch.addRede('172.16.10.2',2)
            switch.addRede('172.16.10.3',2)
            #real
            switch.addRede('10.123.123.4',3)
            switch.addRede('10.123.123.3',3)
            switch.addRede('10.123.123.2',5) #rota para controlador do S2
            switch.addRede('10.123.123.1',2) #rota para controlador do S1
            #fic-real
            switch.addRede('10.10.10.2',5) #rota para controlador do S2
            switch.addRede('10.10.10.1',2) #rota para controlador do S1
            switch.addRede('10.10.10.3',3) #rota para controlador do S1
            switch.addRede('10.10.10.4',3)
            #fic-individual control.
            switch.addRede('20.20.20.2',5) #rota para controlador do S2
            switch.addRede('20.20.20.1',2) #rota para controlador do S1
            switch.addRede('20.20.20.3',3) #rota para controlador do S1
            switch.addRede('20.20.20.4',3)

            # portas ligadas a hosts: next = -1
            switch.getPorta(2).next=-1
            switch.getPorta(3).next=-3
            
            #root2-c2
            switch.getPorta(5).next=-1

        elif datapath.id == 3:

            LISTA_HOSTS['10.10.10.3'] = 3
            LISTA_HOSTS['10.123.123.3'] = 3
            # dizendo qual o primeiro switch da rota para os hosts determinados
            LISTA_HOSTS['172.16.10.1'] = 3
            LISTA_HOSTS['172.16.10.2'] = 3
            LISTA_HOSTS['172.16.10.3'] = 3
            LISTA_HOSTS['172.16.10.4'] = 3
            #
            #conf. rotas
            #hosts
            switch.addRede('172.16.10.4',2)
            switch.addRede('172.16.10.1',1)
            switch.addRede('172.16.10.2',1)
            switch.addRede('172.16.10.3',1)
            #real
            switch.addRede('10.123.123.4',2)
            switch.addRede('10.123.123.3',5)
            switch.addRede('10.123.123.2',1) #rota para controlador do S2
            switch.addRede('10.123.123.1',1) #rota para controlador do S1
            #fic-real
            switch.addRede('10.10.10.3',5)
            switch.addRede('10.10.10.4',2)
            switch.addRede('10.10.10.2',1) #rota para controlador do S2
            switch.addRede('10.10.10.1',1) #rota para controlador do S1
            #fic-indiv. contr
            switch.addRede('20.30.30.4',2)
            switch.addRede('20.30.30.3',5)
            switch.addRede('20.30.30.2',1) #rota para controlador do S2
            switch.addRede('20.30.30.1',1) #rota para controlador do S1

            # portas ligadas a hosts: next = -1
            switch.getPorta(1).next=-1
            switch.getPorta(2).next=-2
            
            #root2-c2
            switch.getPorta(5).next=-1
   
        elif datapath.id == 4:

            LISTA_HOSTS['10.10.10.4'] = 4
            LISTA_HOSTS['10.123.123.4'] = 4
            # dizendo qual o primeiro switch da rota para os hosts determinados
            LISTA_HOSTS['172.16.10.1'] = 4
            LISTA_HOSTS['172.16.10.2'] = 4
            LISTA_HOSTS['172.16.10.3'] = 4
            LISTA_HOSTS['172.16.10.4'] = 4
            #
            #conf. rotas
            #hosts
            switch.addRede('172.16.10.4',1)
            switch.addRede('172.16.10.1',4)
            switch.addRede('172.16.10.2',4)
            switch.addRede('172.16.10.3',4)
            #real
            switch.addRede('10.123.123.4',5)
            switch.addRede('10.123.123.3',4)
            switch.addRede('10.123.123.2',4) #rota para controlador do S2
            switch.addRede('10.123.123.1',4) #rota para controlador do S1
            #fic-real
            switch.addRede('10.10.10.4',5)
            switch.addRede('10.10.10.3',4)
            switch.addRede('10.10.10.2',4) #rota para controlador do S2
            switch.addRede('10.10.10.1',4) #rota para controlador do S1
            #fic-indiv.contr
            switch.addRede('20.40.40.4',5)
            switch.addRede('20.40.40.3',4)
            switch.addRede('20.40.40.2',4) #rota para controlador do S2
            switch.addRede('20.40.40.1',4) #rota para controlador do S1

            # portas ligadas a hosts: next = -1
            switch.getPorta(1).next=-1
            switch.getPorta(4).next=-2
            
            #root2-c2
            switch.getPorta(5).next=-1

        switches.append(switch)
        #print("\nSwitch criado\n")